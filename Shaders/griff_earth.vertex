//#define OO_TANGENT_ATTR 1  // <---- Define OO_TANGENT_ATTR to 1 so that Oolite gives correct tangent data to shader. 
#ifdef OO_TANGENT_ATTR 
attribute vec3 tangent; 
#else 
#endif

varying vec2  vTexCoord;
varying vec3  vEyeVector;   // These are all in tangent space
varying vec3  vLight0Vector;
varying vec3  vLight1Vector;
varying float LightLevel;

void main()
{
   // Build tangent basis
#if OO_TANGENT_ATTR
   vec3 n = normalize(gl_NormalMatrix * gl_Normal);
   vec3 t = normalize(gl_NormalMatrix *tangent);
   vec3 b = cross(n, t);
#else
	// Build tangent basis.
	vec3 n = normalize(gl_NormalMatrix * gl_Normal);
	vec3 b = cross(n, gl_NormalMatrix * vec3(0, 1, 0));
	vec3 t = -cross(n, b);
#endif

   mat3 TBN = mat3(t, b, n);
   
   vec3 eyeVector = -vec3(gl_ModelViewMatrix * gl_Vertex);
   vEyeVector = eyeVector * TBN;
   
#ifdef OO_LIGHT_0_FIX
   vec3 light0Vector = gl_LightSource[0].position.xyz + eyeVector;
   vLight0Vector = light0Vector * TBN;
#endif
   vec3 light1Vector = gl_LightSource[1].position.xyz + eyeVector;
   vLight1Vector = light1Vector * TBN;
   vTexCoord = gl_MultiTexCoord0.st;
   gl_Position = ftransform();

// compute the light vector for the day/night effect
    vec3 lightVec = normalize(gl_LightSource[1].position.xyz); 

// Calculate a diffuse light intensity
    LightLevel = dot(lightVec, n);
}
